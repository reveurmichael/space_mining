name: Release

on:
  workflow_dispatch:

permissions:
  contents: write
  id-token: write

jobs:
  test-build-release:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.10'
          cache: 'pip'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          python -m pip install -r requirements.txt
          python -m pip install -e .
          python -m pip install pytest build huggingface_hub

      - name: Run tests
        run: pytest -q

      - name: Extract version
        id: get_version
        run: |
          python - <<'PY'
          import re, pathlib, os, sys
          text = pathlib.Path('pyproject.toml').read_text()
          m = re.search(r'^version\s*=\s*"([^"]+)"', text, re.M)
          if not m:
              print('::error::Could not find version in pyproject.toml'); sys.exit(1)
          v = m.group(1)
          print(f"version={v}")
          with open(os.environ['GITHUB_OUTPUT'], 'a') as f:
              f.write(f"version={v}\n")
          PY

      - name: Build sdist and wheel
        run: python -m build

      - name: Publish to PyPI
        if: success()
        uses: pypa/gh-action-pypi-publish@release/v1
        with:
          user: __token__
          password: ${{ secrets.PYPI_API_TOKEN }}

      - name: Create GitHub Release
        if: success()
        uses: softprops/action-gh-release@v2
        with:
          tag_name: v${{ steps.get_version.outputs.version }}
          name: v${{ steps.get_version.outputs.version }}
          generate_release_notes: true
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}